package com.ionicframework.IdentityVault;

import org.json.JSONException;
import org.json.JSONObject;

public class IdentityVaultConfig {

    public String key;
    public String type;
    public String deviceSecurityType;
    public Integer lockAfterBackgrounded;
    public Integer customPasscodeInvalidUnlockAttempts;
    public Boolean shouldClearVaultAfterTooManyFailedAttempts;
    public Boolean unlockVaultOnLoad;
    public String androidBiometricsNegativeButtonText;
    public String androidBiometricsPreferStrongVaultOrSystemPasscode;
    public String androidBiometricsPromptDescription;
    public String androidBiometricsPromptSubtitle;
    public String androidBiometricsPromptTitle;

    public IdentityVaultConfig(JSONObject json) throws JSONException {
        this.key = json.getString("key");
        this.type = json.getString("type");
        this.deviceSecurityType = json.getString("deviceSecurityType");

        int lockDuration = json.optInt("lockAfterBackgrounded", -1);
        if (lockDuration >= 0) {
            this.lockAfterBackgrounded = lockDuration;
        } else {
            this.lockAfterBackgrounded = null;
        }

        this.customPasscodeInvalidUnlockAttempts = json.optInt("customPasscodeInvalidUnlockAttempts", 5);
        this.shouldClearVaultAfterTooManyFailedAttempts = json.optBoolean("shouldClearVaultAfterTooManyFailedAttempts", false);
        this.unlockVaultOnLoad = json.optBoolean("unlockVaultOnLoad", false);
        this.androidBiometricsNegativeButtonText = json.optString("androidBiometricsNegativeButtonText", "Cancel");
        this.androidBiometricsPreferStrongVaultOrSystemPasscode =
            json.optString("androidBiometricsPreferStrongVaultOrSystemPasscode", "StrongVault");
        this.androidBiometricsPromptDescription = json.optString("androidBiometricsPromptDescription");
        this.androidBiometricsPromptSubtitle = json.optString("androidBiometricsPromptSubtitle");
        this.androidBiometricsPromptTitle = json.optString("androidBiometricsPromptTitle", "Please Authenticate");
    }

    public JSONObject toJSONObject() throws VaultError {
        try {
            JSONObject json = new JSONObject();
            json.put("key", this.key);
            json.put("type", this.type);
            json.put("deviceSecurityType", this.deviceSecurityType);
            json.putOpt("lockAfterBackgrounded", this.lockAfterBackgrounded);
            json.putOpt("customPasscodeInvalidUnlockAttempts", this.customPasscodeInvalidUnlockAttempts);
            json.putOpt("shouldClearVaultAfterTooManyFailedAttempts", this.shouldClearVaultAfterTooManyFailedAttempts);
            json.putOpt("unlockVaultOnLoad", this.unlockVaultOnLoad);
            json.putOpt("androidBiometricsNegativeButtonText", this.androidBiometricsNegativeButtonText);
            json.putOpt("androidBiometricsPreferStrongVaultOrSystemPasscode", this.androidBiometricsPreferStrongVaultOrSystemPasscode);
            json.putOpt("androidBiometricsPromptDescription", this.androidBiometricsPromptDescription);
            json.putOpt("androidBiometricsPromptSubtitle", this.androidBiometricsPromptSubtitle);
            json.putOpt("androidBiometricsPromptTitle", this.androidBiometricsPromptTitle);
            return json;
        } catch (JSONException e) {
            throw new VaultError(e.getLocalizedMessage());
        }
    }
}
