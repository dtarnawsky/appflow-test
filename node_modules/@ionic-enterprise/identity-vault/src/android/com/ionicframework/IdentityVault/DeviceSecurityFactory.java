package com.ionicframework.IdentityVault;

import android.os.Build;
import android.util.Log;
import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;

@RequiresApi(api = Build.VERSION_CODES.M)
public class DeviceSecurityFactory {

    public static VaultBase getDeviceSecurityVault(AppCompatActivity activity, IdentityVaultConfig config, Device device)
        throws VaultError {
        return DeviceSecurityFactory.getDeviceSecurityVault(activity, config, device, false);
    }

    public static VaultBase getDeviceSecurityVault(
        AppCompatActivity activity,
        IdentityVaultConfig config,
        Device device,
        boolean ignoreAuth
    ) throws VaultError {
        VaultBase vault;
        boolean doesDeviceHaveStrongBiometrics = device.getBiometricStrengthLevel(activity).equals("strong");
        boolean isDeviceAndroid11OrGreater = android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.R;

        if (config.deviceSecurityType.equals("Biometrics")) {
            if (!ignoreAuth && !device.isBiometricsEnabled(activity)) {
                throw new BiometricsNotEnabledError();
            }
            if (doesDeviceHaveStrongBiometrics) {
                vault = new DeviceSecurityStrongVault(config, activity);
            } else {
                vault = new DeviceSecurityWeakVault(config, activity);
            }
        } else if (config.deviceSecurityType.equals("SystemPasscode")) {
            if (!ignoreAuth && !device.isDevicePasscodeSet(activity)) {
                throw new PasscodeNotEnabledError();
            }
            if (isDeviceAndroid11OrGreater) {
                vault = new DeviceSecurityStrongVault(config, activity);
            } else {
                Log.d("IV", "Device does not support SystemPasscode only");
                throw new SystemPasscodeNotAvailableError();
            }
        } else if (config.deviceSecurityType.equals("Both")) {
            if (!ignoreAuth && !device.isDevicePasscodeSet(activity) && !device.isBiometricsEnabled(activity)) {
                throw new BiometricsNotEnabledError();
            }
            boolean preferStrongVault = config.androidBiometricsPreferStrongVaultOrSystemPasscode.equals("StrongVault");
            if (preferStrongVault) {
                if (doesDeviceHaveStrongBiometrics) {
                    if (isDeviceAndroid11OrGreater) {
                        vault = new DeviceSecurityStrongVault(config, activity);
                    } else {
                        Log.d(
                            "IV",
                            "Device does not support deviceSecurityType 'Both' option, using the StrongVault preference and setting deviceSecurityType to 'Biometrics'"
                        );
                        config.deviceSecurityType = "Biometrics";
                        return getDeviceSecurityVault(activity, config, device, ignoreAuth);
                    }
                } else {
                    if (isDeviceAndroid11OrGreater) {
                        Log.d(
                            "IV",
                            "Device does not have Strong Biometrics, using the StrongVault preference and setting deviceSecurityType to 'SystemPasscode'"
                        );
                        config.deviceSecurityType = "SystemPasscode";
                        return getDeviceSecurityVault(activity, config, device, ignoreAuth);
                    } else {
                        Log.d("IV", "Device does not support a strong vault. Providing a weak vault");
                        vault = new DeviceSecurityWeakVault(config, activity);
                    }
                }
            } else {
                if (doesDeviceHaveStrongBiometrics) {
                    if (isDeviceAndroid11OrGreater) {
                        vault = new DeviceSecurityStrongVault(config, activity);
                    } else {
                        Log.d(
                            "IV",
                            "Device does not support deviceSecurityType 'Both' option, using the SystemPasscode preference and providing a weak vault"
                        );
                        vault = new DeviceSecurityWeakVault(config, activity);
                    }
                } else {
                    Log.d("IV", "Device does not support a strong vault. Providing a weak vault");
                    vault = new DeviceSecurityWeakVault(config, activity);
                }
            }
        } else {
            vault = new DeviceSecurityWeakVault(config, activity);
        }
        return vault;
    }
}
