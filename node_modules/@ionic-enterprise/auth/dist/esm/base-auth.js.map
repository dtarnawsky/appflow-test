{"version":3,"file":"base-auth.js","sourceRoot":"","sources":["../../src/base-auth.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AuthResult,\n  IHandlers,\n  IIonicAuth,\n  IonicAuthConfig,\n  IonicAuthOptions,\n  TokenStorageProvider,\n  IVUserInterface,\n  IV5UserInterface,\n} from './interfaces';\nimport {\n  AuthIdentityVault5Storage,\n  AuthIdentityVaultStorage,\n  AuthLocalStorage,\n  isIV5UserInterface,\n  isTokenStorageProvider,\n} from './storage';\nimport { SessionHelper } from './session-helper';\nimport { IonicAuth0Config } from './provider_configs/ionic-auth0-config';\nimport { IonicAzureConfig } from './provider_configs/ionic-azure-config';\nimport { IonicCognitoConfig } from './provider_configs/ionic-cognito-config';\nimport { IonicGeneralAuthConfig } from './provider_configs/ionic-general-auth-config';\nimport { getRandomNonce, parseJwt } from './crypto-helper';\nimport { logging, Logger } from './logging';\nimport { IonicSalesForceAuthConfig } from './provider_configs/ionic-salesforce-config';\nimport { IonicPingAuthConfig } from './provider_configs/ionic-ping-config';\nimport { IonicOneLoginConfig } from './provider_configs/ionic-onelogin-config';\nimport { IonicOktaAuthConfig } from './provider_configs/ionic-okta-config';\nimport { IdentityServerAuthConfig } from './provider_configs/ionic-identity-server-config';\nimport { IonicKeyCloakConfig } from './provider_configs/ionic-keycloak-config';\nimport { NativeStorageProvider, WebStorageProvider } from './StorageProvider';\n\nexport abstract class IonicBaseAuth<IDToken extends {} = any>\n  implements Partial<IIonicAuth<IDToken>>\n{\n  protected storage: TokenStorageProvider;\n  protected session: SessionHelper;\n  protected authResult?: AuthResult;\n  protected authConfig: IonicAuthConfig;\n  protected logger: Logger;\n  protected logTag: string = 'IonicBaseAuth: ';\n  protected addedLoginParameters: { [id: string]: string } = {};\n\n  constructor(public options: IonicAuthOptions, protected handlers: IHandlers) {\n    this.storage = this.getStorageProvider(options.tokenStorageProvider);\n    this.session = new SessionHelper(\n      options.clientID,\n      this.options.platform === 'web' ? new WebStorageProvider() : new NativeStorageProvider(),\n    );\n    logging.setLogLevel(options.logLevel);\n    this.logger = logging;\n    switch (this.options.authConfig) {\n      case 'auth0':\n        this.authConfig = new IonicAuth0Config(options);\n        break;\n      case 'azure':\n        this.authConfig = new IonicAzureConfig(options);\n        break;\n      case 'cognito':\n        this.authConfig = new IonicCognitoConfig(options);\n        break;\n      case 'general':\n        this.authConfig = new IonicGeneralAuthConfig(options);\n        break;\n      case 'salesforce':\n        this.authConfig = new IonicSalesForceAuthConfig(options);\n        break;\n      case 'ping':\n        this.authConfig = new IonicPingAuthConfig(options);\n        break;\n      case 'identity-server':\n        this.authConfig = new IdentityServerAuthConfig(options, async () => this.getRawIdToken());\n        break;\n      case 'okta':\n        this.authConfig = new IonicOktaAuthConfig(options, async () => this.getRawIdToken());\n        break;\n      case 'keycloak':\n        this.authConfig = new IonicKeyCloakConfig(options);\n        break;\n      case 'onelogin':\n        this.authConfig = new IonicOneLoginConfig(options, async () => this.getRawIdToken());\n        break;\n      default:\n        this.authConfig = new IonicAzureConfig(options);\n        break;\n    }\n  }\n\n  public async getRawIdToken() {\n    let idToken: string | undefined = undefined;\n    if (this.storage.getIdToken) {\n      idToken = await this.storage.getIdToken();\n    } else {\n      idToken = this.authResult && this.authResult.idToken;\n    }\n    return idToken;\n  }\n\n  public setStorageOnLockCallback(onLockCallback: () => void) {\n    if (this.storage.onLock && typeof this.storage.onLock === 'function') {\n      this.storage.onLock(onLockCallback);\n    }\n  }\n\n  protected abstract internalHandleCallback(\n    url: string,\n    externalCallback: boolean,\n  ): Promise<AuthResult>;\n\n  protected abstract showUrl(\n    url: string,\n    options?: { iosWebView?: 'private' | 'shared'; hide?: boolean },\n    urlToCloseWindow?: string,\n  ): Promise<{ event: string; callback: string } | void>;\n\n  abstract refreshSession(tokenName?: string): Promise<void>;\n\n  private getStorageProvider(\n    type?: 'localStorage' | TokenStorageProvider | IVUserInterface | IV5UserInterface,\n  ): TokenStorageProvider {\n    if (!type || type === 'localStorage') {\n      const authLocalStorage = new AuthLocalStorage();\n      authLocalStorage.setClientId(this.options.clientID);\n      return authLocalStorage;\n    } else if (isTokenStorageProvider(type)) {\n      return type;\n    } else if (isIV5UserInterface(type)) {\n      const authIV5Storage = new AuthIdentityVault5Storage(type);\n      authIV5Storage.setClientId(this.options.clientID);\n      return authIV5Storage;\n    } else {\n      const authIVStorage = new AuthIdentityVaultStorage(type);\n      authIVStorage.setClientId(this.options.clientID);\n      return authIVStorage;\n    }\n  }\n\n  private async validateIdToken(idToken: string): Promise<any> {\n    return parseJwt(idToken).payload;\n  }\n\n  protected async setSession(authResult: AuthResult, tokenName?: string, scopes?: string) {\n    const expiresAt = authResult.expiresIn\n      ? authResult.expiresIn * 1000 + new Date().getTime()\n      : undefined;\n\n    if (expiresAt) {\n      this.logger.debug('setting expires at', expiresAt);\n      await this.session.setExpiresAt(expiresAt, tokenName);\n    } else {\n      this.logger.debug('no expiration sent in result');\n    }\n\n    // if we have a valid tokenName we are refreshing a secondary token\n    //   save the scopes, but not the result\n    if (tokenName) {\n      await this.session.setTokenScopes(scopes as string, tokenName as string);\n    } else {\n      this.authResult = authResult;\n    }\n\n    if (this.storage.setIdToken && authResult.idToken) {\n      await this.storage.setIdToken(authResult.idToken);\n    }\n    if (this.storage.setAccessToken && authResult.accessToken) {\n      await this.storage.setAccessToken(authResult.accessToken, tokenName);\n    }\n    if (this.storage.setRefreshToken && authResult.refreshToken) {\n      await this.storage.setRefreshToken(authResult.refreshToken);\n    }\n    return this.authResult;\n  }\n\n  additionalLoginParameters(parameters: { [id: string]: string }): void {\n    this.addedLoginParameters = parameters;\n  }\n\n  async setOverrideDiscoveryUrl(url: string) {\n    this.authConfig.overrideDiscoveryUrl = url;\n    await this.session.setOverrideUrl(url);\n  }\n\n  async clearOverrideDiscoveryUrl() {\n    this.authConfig.overrideDiscoveryUrl = '';\n    await this.session.clearOverrideUrl();\n  }\n\n  async getOverrideDiscoveryUrl() {\n    this.authConfig.overrideDiscoveryUrl = (await this.session.getOverrideUrl()) || '';\n    return this.authConfig.overrideDiscoveryUrl || undefined;\n  }\n\n  async getAccessTokenExpiration(tokenName?: string) {\n    const expiresAt = await this.session.getExpiresAt(tokenName);\n    return typeof expiresAt === 'number' ? expiresAt : undefined;\n  }\n\n  async login(overrideUrl?: string): Promise<void> {\n    return new Promise(async (resolve, reject) => {\n      const keys = await this.authConfig.generateChallengeAndVerifier();\n      const nonce = getRandomNonce();\n      await this.session.clearAuthData();\n      await this.session.setAuthData(keys);\n      await this.session.setNonce(nonce);\n      const previousOverrideUrl = await this.session.getOverrideUrl();\n      this.authConfig.overrideDiscoveryUrl = overrideUrl || previousOverrideUrl || '';\n      try {\n        const url = await this.authConfig.getAuthorizeUrl(\n          nonce,\n          keys.challenge,\n          this.addedLoginParameters,\n        );\n\n        this.showUrl(url.url!, undefined, this.options.redirectUri!)\n          .then(async (result: any) => {\n            const callbackString: string = result.callback;\n\n            if (callbackString) {\n              const searchParams = new URL(callbackString).searchParams;\n              if (searchParams.has('error_description')) {\n                const errorDescription: string = searchParams.get('error_description') as string;\n                logging.debug('error_description' + errorDescription);\n                throw new Error(errorDescription);\n              }\n              const authResult = await this.internalHandleCallback(callbackString, false);\n              this.onLoginSuccess(authResult);\n              resolve();\n            } else {\n              if (result.event === 'closed') {\n                throw new Error('browser was closed');\n              } else {\n                throw new Error('no callback string');\n              }\n            }\n          })\n          .catch(error => {\n            reject(error);\n          });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  async getIdToken() {\n    const idToken = await this.getRawIdToken();\n    if (!idToken) {\n      return;\n    }\n    const result = await this.validateIdToken(idToken);\n    return result;\n  }\n\n  async getAuthResponse() {\n    if (this.storage.getAuthResponse) {\n      return this.storage.getAuthResponse();\n    }\n  }\n\n  async handleLoginCallback(url: string = window.location.href) {\n    const authResult = await this.internalHandleCallback(url, true);\n    this.onLoginSuccess(authResult);\n    return authResult;\n  }\n\n  async handleLogoutCallback() {\n    return this.finishLogout();\n  }\n\n  /**\n   * @deprecated Use `handleLoginCallback()` instead\n   */\n  async handleCallback(url: string): Promise<AuthResult> {\n    return this.handleLoginCallback(url);\n  }\n\n  async isAccessTokenAvailable(tokenName?: string): Promise<boolean> {\n    if (this.storage.getAccessToken) {\n      const token = await this.storage.getAccessToken(tokenName);\n      return !!token;\n    }\n\n    return false;\n  }\n\n  async isAccessTokenExpired(tokenName?: string): Promise<boolean> {\n    const expiresAt = await this.session.getExpiresAt(tokenName);\n    this.logger.debug(this.logTag, 'expiresAt: ', expiresAt);\n\n    // If the result didn't include an expires_in we can't know whether it's expired or not\n    return typeof expiresAt === 'number' ? new Date().getTime() >= expiresAt : false;\n  }\n\n  async isAuthenticated(tokenName?: string): Promise<boolean> {\n    const idToken = await this.getIdToken();\n    if (!idToken) {\n      this.logger.debug(this.logTag, 'no idToken, false');\n      return false;\n    }\n    try {\n      let isAuthenticated = !(await this.isAccessTokenExpired(tokenName));\n      if (!isAuthenticated) {\n        this.logger.debug(this.logTag, 'after expiresAt time');\n        try {\n          await this.refreshSession(tokenName);\n          this.logger.debug(this.logTag, 'refresh succeeded, returning true');\n          isAuthenticated = true;\n        } catch (e) {\n          await this.clearStorage();\n          this.logger.debug(this.logTag, 'refresh threw, false', e);\n          isAuthenticated = false;\n        }\n      }\n      return isAuthenticated;\n    } catch (e) {\n      this.logger.error(`${this.logTag} isAuthenticated`, e);\n      await this.clearStorage();\n      return false;\n    }\n  }\n\n  async getRefreshToken(): Promise<string | undefined> {\n    return this.storage.getRefreshToken ? await this.storage.getRefreshToken() : undefined;\n  }\n\n  async isRefreshTokenAvailable(): Promise<boolean> {\n    return !!(await this.getRefreshToken());\n  }\n\n  protected async internalGetToken(\n    codeName: string,\n    code: string,\n    grantType: string,\n    verifier: any,\n    scope: string | undefined,\n  ): Promise<AuthResult> {\n    throw Error('Not Implemented');\n  }\n\n  async getAccessToken(tokenName?: string, scopes?: string) {\n    const isAuthenticated = await this.isAuthenticated();\n    if (!isAuthenticated) {\n      this.logger.debug(this.logTag, 'Not authenticated, refresh failed.');\n      throw 'Not authenticated, refresh failed.';\n    }\n\n    if (this.storage.getAccessToken) {\n      this.logger.debug(this.logTag, 'returning storage accessToken', tokenName);\n      if (tokenName) {\n        const tempAccessToken = await this.storage.getAccessToken(tokenName);\n\n        if (tempAccessToken) {\n          const isAuthenticatedToken = await this.isAuthenticated(tokenName);\n\n          if (!isAuthenticatedToken) {\n            this.logger.debug(this.logTag, 'Not authenticated, refresh2 failed.');\n            throw 'Not authenticated, refresh2 failed.';\n          }\n        }\n      }\n\n      const accessToken = await this.storage.getAccessToken(tokenName);\n      if (accessToken) {\n        return accessToken;\n      }\n    }\n\n    if (tokenName) {\n      let session = await this.session.getAuthData();\n      if (!session) {\n        session = await this.authConfig.generateChallengeAndVerifier();\n      }\n\n      let refreshToken: string = '';\n      if (this.storage.getRefreshToken) {\n        refreshToken = (await this.storage.getRefreshToken()) as string;\n      }\n\n      const result = await this.internalGetToken(\n        'refresh_token',\n        refreshToken,\n        'refresh_token',\n        session.verifier,\n        scopes,\n      );\n      if (result) {\n        await this.setSession(result, tokenName, scopes);\n        this.logger.debug(this.logTag, 'Acquired a new token.', tokenName, scopes);\n        return result.accessToken;\n      }\n\n      this.logger.debug(this.logTag, 'Could not acquire a new token for: ', tokenName, scopes);\n      throw 'No token could be acquired.';\n    } else {\n      if (this.storage.getAuthResponse) {\n        const authResponse = await this.storage.getAuthResponse();\n        if (authResponse && authResponse.accessToken) {\n          this.logger.debug(this.logTag, 'returning authResponse accessToken');\n          return authResponse.accessToken;\n        }\n      }\n\n      if (this.authResult && this.authResult.accessToken) {\n        this.logger.debug(this.logTag, 'returning authResult accessToken');\n        return this.authResult.accessToken;\n      }\n    }\n\n    this.logger.debug(this.logTag, 'Could not find a token, failing.');\n    throw 'Authenticated, but token not found.';\n  }\n\n  async expire(tokenName?: string) {\n    await this.session.setExpiresAt(0, tokenName);\n  }\n\n  async logout() {\n    await this.getOverrideDiscoveryUrl();\n    const url = await this.authConfig.getLogoutUrl();\n    logging.debug('logout url: ' + url.url);\n    await this.showUrl(url.url!, { hide: true }, this.options.logoutUrl);\n    await this.finishLogout();\n  }\n\n  private async finishLogout() {\n    this.authResult = undefined;\n    await this.clearStorage();\n    this.authConfig.locations = undefined;\n    await this.clearOverrideDiscoveryUrl();\n    this.onLogout();\n  }\n\n  onLoginSuccess(authResponse: any) {\n    this.authConfig.locations = undefined;\n    this.authConfig.overrideDiscoveryUrl = '';\n    this.handlers.onLoginSuccess(authResponse);\n  }\n\n  onLogout() {\n    this.handlers.onLogout();\n  }\n\n  async clearStorage() {\n    await this.session.clear();\n    if (this.storage.clear) {\n      await this.storage.clear();\n    }\n  }\n}\n"]}