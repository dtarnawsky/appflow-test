import { helpers } from './helpers';
import { globalConfigs } from './global-configs';
export class http {
    static sendRequest(url, options, success, failure) {
        helpers.handleMissingCallbacks(success, failure);
        options = helpers.handleMissingOptions(options, globalConfigs);
        var headers = helpers.getMergedHeaders(url, options.headers, globalConfigs.headers);
        switch (options.method) {
            case 'post':
            case 'put':
            case 'patch':
                var data = helpers.getProcessedData(options.data, options.serializer);
                return cordova.exec(success, failure, 'IonicHttp', options.method, [
                    url,
                    data,
                    options.serializer,
                    headers,
                    options.timeout,
                    options.followRedirect,
                    options.responseType,
                ]);
            default:
                return cordova.exec(success, failure, 'IonicHttp', options.method, [
                    url,
                    headers,
                    options.timeout,
                    options.followRedirect,
                    options.responseType,
                ]);
        }
    }
    static post(url, data, headers, success, failure) {
        return http.sendRequest(url, { method: 'post', data: data, headers: headers }, success, failure);
    }
    static get(url, success, failure) {
        return http.sendRequest(url, { method: 'get', params: {}, headers: {} }, success, failure);
    }
    static put(url, data, headers, success, failure) {
        return http.sendRequest(url, { method: 'put', data: data, headers: headers }, success, failure);
    }
    static patch(url, data, headers, success, failure) {
        return http.sendRequest(url, { method: 'patch', data: data, headers: headers }, success, failure);
    }
    static del(url, params, headers, success, failure) {
        return http.sendRequest(url, { method: 'delete', params: params, headers: headers }, success, failure);
    }
    static head(url, params, headers, success, failure) {
        return http.sendRequest(url, { method: 'head', params: params, headers: headers }, success, failure);
    }
}
//# sourceMappingURL=http.js.map