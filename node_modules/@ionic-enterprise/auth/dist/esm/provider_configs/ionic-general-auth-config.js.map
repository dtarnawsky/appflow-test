{"version":3,"file":"ionic-general-auth-config.js","sourceRoot":"","sources":["../../../src/provider_configs/ionic-general-auth-config.ts"],"names":[],"mappings":"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","sourcesContent":["import { IonicAuthConfig, IonicAuthOptions, IonicGeneralAuthOptions } from '../interfaces';\nimport { UrlInfo } from '../UrlInfo';\nimport { OAuthPacker } from '../oauth-packer';\nimport { UrlHelper } from '../urlHelper';\n\nexport class IonicGeneralAuthConfig extends IonicAuthConfig {\n  constructor(public options: IonicAuthOptions) {\n    super(options);\n    if (options.discoveryUrl == undefined) {\n      throw \"IonicAuthOptions.discoveryUrl must be defined, it usually is 'https://YOUR_DOMAIN/.well-known/openid-configuration'\";\n    }\n  }\n\n  async loadLocations(): Promise<void> {\n    await super.loadLocations();\n    if (this.locations['logout_endpoint'] == undefined) {\n      const issuer: string = this.locations['issuer'];\n      this.locations['logout_endpoint'] = issuer.endsWith('/')\n        ? `${issuer}logout`\n        : `${issuer}/logout`;\n    }\n  }\n\n  async getAuthorizeUrl(\n    nonce: string,\n    challenge: string,\n    parameters: { [id: string]: string },\n  ): Promise<UrlInfo> {\n    await this.loadLocations();\n    const base = {\n      ...parameters,\n      clientId: this.options.clientID,\n      redirectUri: this.options.redirectUri,\n      audience: this.options.audience,\n      nonce: nonce,\n      state: nonce,\n      scope: this.options.scope,\n    };\n    const PKCE = {\n      code_challenge_method: 'S256',\n      code_challenge: challenge,\n      responseType: 'code',\n    };\n    if (this.options.platform !== 'web') {\n      const options = { ...base, ...PKCE };\n      return UrlHelper.buildUrl(\n        this.locations['authorization_endpoint'],\n        OAuthPacker.packParams(options),\n      );\n    } else {\n      // web case\n      const webBase = { ...base, client_secret: this.options.clientSecret };\n      let options = {};\n      if (this.options.webAuthFlow && this.options.webAuthFlow === 'PKCE') {\n        options = { ...webBase, ...PKCE };\n      } else {\n        options = {\n          ...webBase,\n          response_type: 'id_token token',\n          response_mode: 'fragment',\n        };\n      }\n      return UrlHelper.buildUrl(\n        this.locations['authorization_endpoint'],\n        OAuthPacker.packParams(options),\n      );\n    }\n  }\n\n  async getLogoutUrl(): Promise<UrlInfo> {\n    await this.loadLocations();\n    const options = {\n      clientId: this.options.clientID,\n    };\n    let params = OAuthPacker.packParams(options);\n    params['returnTo'] = this.options.logoutUrl;\n    let logoutUrl = UrlHelper.buildUrl(\n      this.locations['end_session_endpoint'] || this.locations['logout_endpoint'],\n      params,\n    );\n    return logoutUrl;\n  }\n\n  async getTokenUrl(): Promise<UrlInfo> {\n    await this.loadLocations();\n    const generalConfig: IonicGeneralAuthOptions = this.options;\n    let payload: any = {};\n    // defaults to true\n    if (generalConfig.alwaysSendClientSecretOnLogin !== false && !!generalConfig.clientSecret) {\n      payload = { client_secret: generalConfig.clientSecret };\n    }\n\n    return {\n      url: this.locations['token_endpoint'],\n      headers: {},\n      payload: payload,\n    };\n  }\n}\n"]}