{"version":3,"file":"ionic-salesforce-config.js","sourceRoot":"","sources":["../../../src/provider_configs/ionic-salesforce-config.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,sBAAsB,EAAE,MAAM,6BAA6B,CAAC;AACrE,OAAO,EAAE,4BAA4B,EAAE,MAAM,kBAAkB,CAAC;AAChE,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACzC,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAG9C,MAAM,OAAO,yBAA0B,SAAQ,sBAAsB;IACnE,wGAAwG;IACxG,4BAA4B;QAC1B,OAAO,4BAA4B,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;QAE3B,MAAM,OAAO,GAAG;YACd,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ;YAC/B,qBAAqB,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;SAC9C,CAAC;QAEF,OAAO,SAAS,CAAC,QAAQ,CACvB,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,EACtC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAChC,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { IonicGeneralAuthConfig } from './ionic-general-auth-config';\nimport { generateChallengeAndVerifier } from '../crypto-helper';\nimport { UrlHelper } from '../urlHelper';\nimport { OAuthPacker } from '../oauth-packer';\nimport { UrlInfo } from '../UrlInfo';\n\nexport class IonicSalesForceAuthConfig extends IonicGeneralAuthConfig {\n  // The only unique salesforce quirk is that the challenge/verifier can only consist of hexidecimal chars\n  generateChallengeAndVerifier() {\n    return generateChallengeAndVerifier(true);\n  }\n\n  async getLogoutUrl(): Promise<UrlInfo> {\n    await this.loadLocations();\n\n    const options = {\n      clientId: this.options.clientID,\n      postLogoutRedirectUri: this.options.logoutUrl,\n    };\n\n    return UrlHelper.buildUrl(\n      this.locations['end_session_endpoint'],\n      OAuthPacker.packParams(options),\n    );\n  }\n}\n"]}