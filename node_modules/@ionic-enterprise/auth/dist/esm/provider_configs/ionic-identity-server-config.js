import { IonicGeneralAuthConfig } from './ionic-general-auth-config';
import { UrlHelper } from '../urlHelper';
import { OAuthPacker } from '../oauth-packer';
import { messages } from '../messages';
export class IdentityServerAuthConfig extends IonicGeneralAuthConfig {
    constructor(options, onGetRawIdToken) {
        super(options);
        this.onGetRawIdToken = onGetRawIdToken;
    }
    // IdentityServer doesn't have a logout_endpoint in their config, rather they use end_session_endpoint
    async getLogoutUrl() {
        await this.loadLocations();
        let token;
        try {
            token = await this.onGetRawIdToken();
        }
        catch (e) {
            throw new Error(messages.LOGOUT_UNABLE_TO_RETRIEVE_TOKEN);
        }
        const options = {
            idTokenHint: token,
            postLogoutRedirectUri: this.options.logoutUrl,
        };
        return UrlHelper.buildUrl(this.locations['end_session_endpoint'], OAuthPacker.packParams(options));
    }
}
//# sourceMappingURL=ionic-identity-server-config.js.map