{"version":3,"file":"StorageProvider.js","sourceRoot":"","sources":["../../src/StorageProvider.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @hidden\n */\nexport interface StorageProvider {\n  get(key: string): Promise<string | null>;\n  set(key: string, value: string): Promise<void>;\n  remove(key: string): Promise<void>;\n  clear(): Promise<void>;\n}\n\n/**\n * @hidden\n */\nexport class WebStorageProvider implements StorageProvider {\n  constructor(private keyPrefix = 'ionic-ac-storage:') {}\n\n  async get(key: string): Promise<string | null> {\n    return localStorage.getItem(this.getKey(key));\n  }\n\n  async set(key: string, value: string): Promise<void> {\n    return localStorage.setItem(this.getKey(key), value);\n  }\n\n  async remove(key: string): Promise<void> {\n    return localStorage.removeItem(this.getKey(key));\n  }\n\n  async clear(): Promise<void> {\n    const length = localStorage.length;\n    for (let i = 0; i < length; i++) {\n      if (localStorage.key(i)?.startsWith(this.keyPrefix)) {\n        localStorage.removeItem(localStorage.key(i)!);\n      }\n    }\n  }\n\n  private getKey(key: string) {\n    return `${this.keyPrefix}${key}`;\n  }\n}\n\n/**\n * @hidden\n */\nexport class NativeStorageProvider implements StorageProvider {\n  async get(key: string): Promise<string | null> {\n    return new Promise((res, rej) => {\n      cordova.exec(\n        function (result) {\n          res(result);\n        },\n        function (error) {\n          rej(error);\n        },\n        'IonicAuthConnectStorage',\n        'get',\n        [key],\n      );\n    });\n  }\n\n  async set(key: string, value: string): Promise<void> {\n    return new Promise((res, rej) => {\n      cordova.exec(\n        function (_winParam) {\n          res();\n        },\n        function (error) {\n          rej(error);\n        },\n        'IonicAuthConnectStorage',\n        'set',\n        [key, value],\n      );\n    });\n  }\n\n  async remove(key: string): Promise<void> {\n    return new Promise((res, rej) => {\n      cordova.exec(\n        function () {\n          res();\n        },\n        function (error) {\n          rej(error);\n        },\n        'IonicAuthConnectStorage',\n        'remove',\n        [key],\n      );\n    });\n  }\n\n  async clear(): Promise<void> {\n    return new Promise((res, rej) => {\n      cordova.exec(\n        function () {\n          res();\n        },\n        function (error) {\n          rej(error);\n        },\n        'IonicAuthConnectStorage',\n        'clear',\n      );\n    });\n  }\n}\n"]}