
package com.ionicframework.auth.ionicauthconnectstorage;

import android.app.Activity;
import android.content.SharedPreferences;

import org.apache.cordova.CordovaInterface;
import org.apache.cordova.CordovaPlugin;
import org.apache.cordova.CallbackContext;

import org.apache.cordova.CordovaWebView;
import org.json.JSONArray;
import org.json.JSONException;

public class IonicAuthConnectStorage extends CordovaPlugin {

  private static final String PREFS_NAME = "IonicAuthConnectStorage";
  private SharedPreferences prefs;
  private SharedPreferences.Editor editor;

  @Override
  public void initialize(CordovaInterface cordova, CordovaWebView webView) {
    super.initialize(cordova, webView);
    prefs = this.cordova.getContext().getSharedPreferences(PREFS_NAME, Activity.MODE_PRIVATE);
    editor = prefs.edit();
  }

  @Override
  public boolean execute(String action, JSONArray args, CallbackContext callbackContext) throws JSONException {
    if(action.equals("get")) {
      String key = args.getString(0);
      this.get(key, callbackContext);
      return true;
    } else if(action.equals("set")) {
      String key = args.getString(0);
      String value = args.getString(1);
      this.set(key, value, callbackContext);
      return true;
    } else if(action.equals("remove")) {
      String key = args.getString(0);
      this.remove(key, callbackContext);
      return true;
    } else if(action.equals("clear")) {
      this.clear(callbackContext);
    }
    return false;
  }

  private void get(String key, CallbackContext callbackContext) {
    String value = prefs.getString(key, null);
    callbackContext.success(value);
  }

  private void set(String key, String value, CallbackContext callbackContext) {
    editor.putString(key, value);
    editor.apply();
    callbackContext.success();
  }

  private void remove(String key, CallbackContext callbackContext) {
    editor.remove(key);
    editor.apply();
    callbackContext.success();
  }

  private void clear(CallbackContext callbackContext) {
    editor.clear();
    editor.apply();
    callbackContext.success();
  }

}